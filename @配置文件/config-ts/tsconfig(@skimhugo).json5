{
	"compilerOptions": {
     // Disabled because of https://github.com/Microsoft/TypeScript/issues/29172
     // "outDir": "dist",

      "module": "node16",
      "moduleResolution": "nodenext",
      "moduleDetection": "force",
      "resolveJsonModule": true,
      "target": "esnext",
      "useDefineForClassFields": true,
      "lib": ["dom", "esnext","dom.iterable"],

      // emit
      "declaration": true,
      "noEmitOnError": true,
      //      "preserveValueImports": true,

      // emitDeclarationOnly
      // emit downlevel
      // downlevelIteration
      // importHelpers

      // Interop Constraints
      "allowSyntheticDefaultImports": true,// To provide backwards compatibility, Node.js allows you to import most CommonJS packages with a default import. This flag tells TypeScript that it's okay to use import on CommonJS modules.
      "esModuleInterop": true,
      "forceConsistentCasingInFileNames": true,
      "isolatedModules": true,

      // type checking
      "allowUnreachableCode": false,
      "alwaysStrict": true,
      "exactOptionalPropertyTypes": true,
      "noFallthroughCasesInSwitch": true,
      "noImplicitAny": true,
      "noImplicitOverride": true,
      "noImplicitReturns": true,
      "noImplicitThis": true,
      "noPropertyAccessFromIndexSignature": true,
      "noUncheckedIndexedAccess": true,
      "noUnusedLocals": true,
      "noUnusedParameters": true,
      "strict": true,
      "strictBindCallApply": true,
      "strictFunctionTypes": true,
      "strictNullChecks": true,
      "strictPropertyInitialization": true,
      "useUnknownInCatchVariables": true,

      "skipLibCheck": true
    }
}
